(()=>{function handleResult(res){return new Promise((async(resolve,reject)=>{if(res.status!=200)reject(res);var result=await res.json();if(result.result==1)resolve(result);else reject(result)}))}function copy(path,newPath,move=false){return new Promise((async(resolve,reject)=>{var headers={};if(tilepieces.currentProject)headers["current-project"]=tilepieces.currentProject;path=path.replace(/&/g,"%26");newPath=newPath.replace(/&/g,"%26");fetch(`${API.copy}&path=${path}`+`&newPath=${newPath}`+`${move?`&move=true`:``}`,{headers:headers}).then((res=>{handleResult(res).then((r=>{var newPathSplitted=newPath.split("/");newPathSplitted.pop();window.dispatchEvent(new CustomEvent("tilepieces-file-updating",{detail:{path:newPathSplitted.join("/"),isDirectory:true}}));resolve(r)})).catch((e=>reject(e)))}),reject)}))}function create(projectName){return new Promise((async(resolve,reject)=>{projectName=projectName.replace(/&/g,"%26");fetch(API.create+"&projectName="+projectName).then((res=>{handleResult(res).then((r=>{tilepieces.currentProject=projectName;resolve(r)})).catch((e=>reject(e)))}),reject)}))}function createComponent(newSettings,files=[]){return new Promise((async(resolve,reject)=>{var headers={};if(tilepieces.currentProject)headers["current-project"]=tilepieces.currentProject;var formData=new FormData;formData.append("newSettings",JSON.stringify(newSettings));files.forEach((file=>{formData.append(file.path,file.blob)}));fetch(`${API.createComponent}`,{method:"POST",headers:headers,body:formData}).then((res=>{handleResult(res).then((r=>resolve(r))).catch((e=>reject(e)))}),reject)}))}function del(path="",project=null){return new Promise((async(resolve,reject)=>{var headers={};if(tilepieces.currentProject)headers["current-project"]=tilepieces.currentProject;path=path.replace(/&/g,"%26");fetch(`${API.delete}&path=${path}${project?`&project=${project}`:""}`,{headers:headers}).then((res=>{handleResult(res).then((r=>resolve(r))).catch((e=>reject(e)))}),reject)}))}function deleteComponent(newSettings){return new Promise((async(resolve,reject)=>{var headers={};if(tilepieces.currentProject)headers["current-project"]=tilepieces.currentProject;fetch(`${API.deleteComponent}`,{method:"POST",headers:headers,body:JSON.stringify(newSettings)}).then((res=>{handleResult(res).then((r=>resolve(r))).catch((e=>reject(e)))}),reject)}))}function getSettings(){return new Promise((async(resolve,reject)=>{var headers={};if(tilepieces.currentProject)headers["current-project"]=tilepieces.currentProject;fetch(`${API.settings}`,{headers:headers}).then((res=>{handleResult(res).then((r=>resolve(r))).catch((e=>reject(e)))}),reject)}))}function read(path,component,project){return new Promise((async(resolve,reject)=>{path=path.replace(/&/g,"%26");var headers={};if(tilepieces.currentProject)headers["current-project"]=tilepieces.currentProject;fetch(`${API.read}&path=${path}${component?`&component=${component}`:``}`+`${project?`&project=${project}`:``}`,{headers:headers}).then((async res=>{var isDirectoryRapresentation=res.headers.has("tilepieces-directory");if(res.ok&&!isDirectoryRapresentation&&isTextMimeType(res.headers.get("Content-Type")))resolve(await res.text());else if(res.ok&&!isDirectoryRapresentation)resolve(await res.blob());else if(res.ok)resolve(await res.json());else reject(await res.json())}),reject)}))}function search(dir,match=null,rgFile=null,componentName=null,projectName=null){return new Promise((async(resolve,reject)=>{var headers={"Content-Type":"application/json"};if(tilepieces.currentProject)headers["current-project"]=tilepieces.currentProject;fetch(`${API.search}`,{method:"POST",headers:headers,body:JSON.stringify({dir:dir,match:match,rgFile:rgFile,componentName:componentName,projectName:projectName})}).then((res=>{handleResult(res).then((r=>resolve(r))).catch((e=>reject(e)))}),reject)}))}function setSettings(newSettings){return new Promise((async(resolve,reject)=>{var headers={"Content-Type":"application/json"};if(tilepieces.currentProject)headers["current-project"]=tilepieces.currentProject;fetch(`${API.settings}`,{method:"POST",headers:headers,body:JSON.stringify(newSettings)}).then((res=>{handleResult(res).then((r=>resolve(r))).catch((e=>reject(e)))}),reject)}))}function update(path,blobFile){return new Promise((async(resolve,reject)=>{var headers={};if(tilepieces.currentProject)headers["current-project"]=tilepieces.currentProject;var formData=new FormData;formData.append("path",path);blobFile&&formData.append("file",blobFile);fetch(API.update,{method:"POST",body:formData,headers:headers}).then((res=>{handleResult(res).then((r=>{var isDirectory=res.headers.has("tilepieces-directory");window.dispatchEvent(new CustomEvent("tilepieces-file-updating",{detail:{path:path,isDirectory:isDirectory}}));resolve(r)})).catch((e=>reject(e)))}),reject)}))}const API={copy:"/?tilepieces-copy",create:"/?tilepieces-create",delete:"/?tilepieces-delete",read:"/?tilepieces-read",open:"/?tilepieces-open",settings:"/?tilepieces-settings",update:"/?tilepieces-update",search:"/?tilepieces-search",createComponent:"/?tilepieces-component-create",deleteComponent:"/?tilepieces-component-delete"};window.storageInterface={create:create,read:read,update:update,delete:del,copy:copy,getSettings:getSettings,setSettings:setSettings,search:search,createComponent:createComponent,deleteComponent:deleteComponent};if(window.tilepieces){window.tilepieces.storageInterface=storageInterface;window.tilepieces.imageTypeProcess=0}function isTextMimeType(mimeType){return mimeType&&(mimeType.startsWith("text/")||mimeType=="application/json"||mimeType=="application/xml"||mimeType.indexOf("+xml")>-1)}})();